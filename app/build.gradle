apply plugin: 'com.android.application'

// Get all versions from gradle of the project
def cfg = rootProject.ext.configuration
def libs = rootProject.ext.libraries
def key = rootProject.ext.keystore

android {
  compileSdkVersion cfg.compileVersion
  buildToolsVersion cfg.buildToolsVersion
  defaultConfig {
    applicationId cfg.package
    minSdkVersion cfg.minSdk
    targetSdkVersion cfg.targetSdk
    versionCode cfg.version_code
    versionName cfg.version_name
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  implementation "com.android.support:appcompat-v7:${libs.supportVersion}"
  implementation "com.android.support.constraint:constraint-layout:${libs.constraintLayout}"
  implementation 'com.android.support:support-v4:23.4.0'

  // tests
  testImplementation "junit:junit:${libs.jUnitVersion}"
  androidTestImplementation "com.android.support.test:runner:${libs.runner}"
  androidTestImplementation "com.android.support.test.espresso:espresso-core:${libs.espresso}"

  // Dagger
  compile "com.google.dagger:dagger:${libs.dagger}"
  annotationProcessor "com.google.dagger:dagger-compiler:${libs.dagger}"

  // Retrofit
  compile "com.squareup.retrofit2:retrofit:${libs.retrofit}"
  compile "com.squareup.retrofit2:converter-gson:${libs.retrofit}"

  // Lifecycle
  compile "android.arch.lifecycle:extensions:${libs.archVersion}"
  annotationProcessor "android.arch.lifecycle:compiler:${libs.archVersion}"
}
